[["index.html", "Introduction 1 Welcome", " Introduction 2024-06-04 1 Welcome "],["step-1-post-processing-of-the-raw-eddy-covariance-data.html", "2 Step 1: Post-processing of the raw eddy-covariance data", " 2 Step 1: Post-processing of the raw eddy-covariance data Example for basic post-processing of raw eddy-covariance measurements (from CSAT3/Campbell Scientific and Li-7200/LI-COR closed-path IR gas analyzer) including despiking, rotation, averaging and flagging. The following notebooks (e.g., 02_basic-turbulence-diagnostics.ipynb) build upon this and allow for a more detailed analysis (e.g., 03_quadrant-analysis.ipynb). 2.0.1 Eddy-covariance method In the eddy-covariance method, the Reynolds decomposition is applied to every measured quantity \\(x\\) through \\[ x = \\overline{x} + x&#39; \\quad \\textrm{with} \\quad \\overline{x}:= \\frac{1}{t_s} \\int_0^{t_s} x \\: dt, \\] where the ensemble average is replaced by a time average. With the Reynolds postulates (in particular \\(\\overline{x&#39;} = 0\\)) it follows \\[ \\overline{xw} = \\overline{x}\\:\\overline{w} + \\overline{x&#39;w&#39;}, \\] where \\(\\overline{x&#39;w&#39;}\\) represents the vertical flux (\\(w\\): vertical wind speed) of the quantity \\(x\\) with \\(\\overline{xw} = \\overline{x&#39;w&#39;}\\) for \\(\\overline{w}=0\\) (which is intended by the applied coordinate rotation). In the post-processing, quality checks, rotation, averaging and flagging are applied, so that the high-resolution measurements can be analyzed using the eddy-covariance method. A detailed description of the measurement devices and methods can be found in Foken, 2017. #loading Reddy package install.packages(&quot;../src/Reddy_0.0.0.9000.tar.gz&quot;,repos=NULL,source=TRUE) library(Reddy) Installing package into ‘/home/lauracma/R/x86_64-pc-linux-gnu-library/4.0’ (as ‘lib’ is unspecified) #ec data files dir_in=&quot;../data/ec-data_10Hz_raw&quot; files=list.files(dir_in,full.names=TRUE) nf=length(files) Each given file contains 30 minutes of measurements, such that we just need to average over one file to get the 30 minutes averages and fluxes. However, in the notebook 04_multiresolution-decomposition.ipynb we will have a look at method that allows to determine suitable averaging times more accurately. #allocate output var_out=c(&quot;time&quot;,&quot;u_mean&quot;,&quot;v_mean&quot;,&quot;w_mean&quot;,&quot;ws_mean&quot;,&quot;wd_mean&quot;,&quot;T_mean&quot;,&quot;h2o_mean&quot;,&quot;co2_mean&quot;, &quot;u_sd&quot;,&quot;v_sd&quot;,&quot;w_sd&quot;,&quot;T_sd&quot;,&quot;h2o_sd&quot;,&quot;co2_sd&quot;, &quot;cov_uv&quot;,&quot;cov_uw&quot;,&quot;cov_vw&quot;,&quot;cov_wT&quot;,&quot;cov_h2ow&quot;,&quot;cov_co2w&quot;,&quot;cov_wT_snd&quot;,&quot;cov_rhoH2Ow_wpl&quot;, &quot;rot_angle1&quot;,&quot;rot_angle2&quot;,&quot;flag_stationarity&quot;,&quot;flag_w&quot;,&quot;flag_distortion&quot;) nv=length(var_out) dat=data.frame(array(NA,dim=c(nf,nv))) colnames(dat)=var_out #postprocessing per file (30 mins) for (i in 1:nf) { tmp=read.table(files[i],sep=&quot;,&quot;,header=T) dat$time[i]=tmp$X[1] #despiking tmp$T_degC=despiking(tmp$T_degC,-40,30) tmp$u_m.s=despiking(tmp$u_m.s,-25,25) tmp$v_m.s=despiking(tmp$v_m.s,-25,25) tmp$w_m.s=despiking(tmp$w_m.s,-5,5) #wind before rotation dat$ws_mean[i]=sqrt(mean(tmp$u_m.s,na.rm=T)^2+mean(tmp$v_m.s,na.rm=T)^2) dat$wd_mean[i]=atan2(mean(tmp$v_m.s,na.rm=T),mean(tmp$u_m.s,na.rm=T)) #rotation rot_wind=rotate_double(tmp$u_m.s,tmp$v_m.s,tmp$w_m.s) tmp$u_m.s=rot_wind$u tmp$v_m.s=rot_wind$v tmp$w_m.s=rot_wind$w dat$rot_angle1[i]=rot_wind$theta dat$rot_angle2[i]=rot_wind$phi #averaging dat$u_mean[i]=mean(tmp$u_m.s,na.rm=T) dat$v_mean[i]=mean(tmp$v_m.s,na.rm=T) dat$w_mean[i]=mean(tmp$w_m.s,na.rm=T) dat$T_mean[i]=mean(tmp$T_degC,na.rm=T) #unit conversion for gases tmp$rhoH2O=ppt2rho(tmp$H2O_ppt,dat$T_mean[i]+273.15,87000) tmp$rhoCO2=ppt2rho(tmp$CO2_ppm/1000,dat$T_mean[i]+273.15,87000,gas=&quot;CO2&quot;) dat$h2o_mean[i]=mean(tmp$rhoH2O,na.rm=T) dat$co2_mean[i]=mean(tmp$rhoCO2,na.rm=T) #sds dat$u_sd[i]=sd(tmp$u_m.s,na.rm=T) dat$v_sd[i]=sd(tmp$v_m.s,na.rm=T) dat$w_sd[i]=sd(tmp$w_m.s,na.rm=T) dat$T_sd[i]=sd(tmp$T_degC,na.rm=T) dat$h2o_sd[i]=sd(tmp$rhoH2O,na.rm=T) dat$co2_sd[i]=sd(tmp$rhoCO2,na.rm=T) #covs dat$cov_uw[i]=cov(tmp$u_m.s,tmp$w_m.s,use=&quot;pairwise.complete.obs&quot;) dat$cov_uv[i]=cov(tmp$u_m.s,tmp$v_m.s,use=&quot;pairwise.complete.obs&quot;) dat$cov_vw[i]=cov(tmp$v_m.s,tmp$w_m.s,use=&quot;pairwise.complete.obs&quot;) dat$cov_wT[i]=cov(tmp$T_degC,tmp$w_m.s,use=&quot;pairwise.complete.obs&quot;) dat$cov_h2ow[i]=cov(tmp$rhoH2O,tmp$w_m.s,use=&quot;pairwise.complete.obs&quot;) dat$cov_co2w[i]=cov(tmp$rhoCO2,tmp$w_m.s,use=&quot;pairwise.complete.obs&quot;) #SND correction dat$cov_wT_snd[i]=SNDcorrection(tmp$u_m.s,tmp$v_m.s,tmp$w_m.s,tmp$T_degC+273.15) #WPL correction #dat$cov_rhoH2Ow_wpl[i]=WPLcorrection(tmp$rhoH2O,w=tmp$w_m.s,Ts=tmp$T_degC+273.15,q=tmp$q) #flagging dat$flag_stationarity[i]=flag_stationarity(tmp$w_m.s,tmp$T_degC,nsub=3000) dat$flag_w[i]=flag_w(dat$w_mean[i]) dat$flag_distortion[i]=flag_distortion(tmp$u_m.s,tmp$v_m.s,dir_blocked=c(340,360)) } The covariances have to be converted to the fluxes (unit W/m\\(^2\\)). Since the measured temperature (“sonic temperature”) is approximately equal to the virtual temperature, the respective flux cov_wT represents the buoyancy flux. To derive the sensible heat flux from this, the so called SND-corrected flux cov_wT_snd should be used. For the latent heat flux a density correction (WPL correction) is recommended to be applied. #calculate fluxes dat$sh=cov2sh(dat$cov_wT_snd) dat$lh=cov2lh(dat$cov_h2ow) The output contains the 30 minutes averages, standard deviations and covariances of the measured quantities, which will be used in the following notebooks for some more detailed analysis. #look at output dat A data.frame: 127 × 30 time u_mean v_mean w_mean ws_mean wd_mean T_mean h2o_mean co2_mean u_sd ⋯ cov_co2w cov_wT_snd cov_rhoH2Ow_wpl rot_angle1 rot_angle2 flag_stationarity flag_w flag_distortion sh lh &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ⋯ &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; 2018-07-20 08:30:00 2.872084 -3.939352e-16 6.931732e-06 2.873170 -2.289284 15.86938 0.007254132 0.0006009614 1.0621428 ⋯ -1.567917e-07 0.105285787 NA -131.16630 0.34842842 0 0 NA 123.251207 103.108515 2018-07-20 09:00:00 2.864793 7.504684e-17 9.052527e-08 2.864538 -2.326045 16.55190 0.007584267 0.0005978138 1.1051216 ⋯ -2.294700e-07 0.160070314 NA -133.27259 0.77454172 0 0 NA 187.383880 162.619600 2018-07-20 09:30:00 3.996526 9.365292e-16 3.049021e-05 4.002522 -2.035397 17.05704 0.007472065 0.0005954894 1.4094952 ⋯ -1.862787e-07 0.153351409 NA -116.61967 0.28889573 0 0 NA 179.518496 123.571122 2018-07-20 10:00:00 4.998016 -2.812846e-16 -2.391239e-06 4.997530 -1.977737 17.60447 0.006762097 0.0005953881 1.2893259 ⋯ -1.504328e-07 0.155664878 NA -113.31596 0.34831201 0 0 NA 182.226723 123.447352 2018-07-20 10:30:00 4.879095 4.062636e-16 2.187117e-05 4.880696 -2.014489 18.08994 0.005410862 0.0005948927 1.4699485 ⋯ -1.989823e-07 0.191448808 NA -115.42174 0.65319222 0 0 NA 224.116637 191.164235 2018-07-20 11:00:00 5.225037 -8.977916e-17 -6.972624e-06 5.223984 -2.261205 18.24207 0.004422858 0.0005954766 1.3192267 ⋯ -1.330638e-07 0.149027117 NA -129.55749 0.44710739 0 0 NA 174.456329 150.843015 2018-07-20 11:30:00 5.896774 -7.481298e-16 -4.307951e-05 5.893156 -2.141157 18.50137 0.003765156 0.0005955767 1.4571181 ⋯ -1.312707e-07 0.157559904 NA -122.67927 0.81792595 0 0 NA 184.445107 161.171549 2018-07-20 12:00:00 5.211296 -3.062741e-16 -1.461607e-05 5.209715 -2.253118 18.57772 0.003418867 0.0005955199 1.2629639 ⋯ -1.288697e-07 0.147288599 NA -129.09416 0.70850506 0 0 NA 172.421160 167.032959 2018-07-20 12:30:00 4.295926 -7.486225e-16 -1.727795e-06 4.295548 -2.194560 18.80679 0.003522845 0.0005946848 1.3898230 ⋯ -1.343277e-07 0.150429440 NA -125.73902 0.55118076 0 0 NA 176.097937 171.821168 2018-07-20 13:00:00 3.973616 -4.304496e-16 -1.026732e-05 3.972403 -2.117721 18.78832 0.003276191 0.0005946895 1.4404999 ⋯ -1.394019e-07 0.144682715 NA -121.33650 0.58416349 0 0 NA 169.370621 173.852072 2018-07-20 13:30:00 1.520355 2.799239e-16 5.320330e-05 1.527719 1.749457 18.20841 0.005748607 0.0005944343 3.1235024 ⋯ -1.209975e-07 0.171911188 NA 100.23652 0.41171028 0 0 NA 201.245219 -89.529788 2018-07-20 14:00:00 6.940662 5.646526e-16 -2.889014e-05 6.936159 1.375615 16.21080 0.008946908 0.0005954275 1.4076910 ⋯ -2.003594e-07 0.139620668 NA 78.81692 0.38055423 0 0 NA 163.444813 112.745879 2018-07-20 14:30:00 6.416896 1.098171e-16 -2.196289e-05 6.414141 1.392954 15.81382 0.008976061 0.0005949455 1.2086952 ⋯ -2.123072e-07 0.120795796 NA 79.81038 0.50141324 0 0 NA 141.407763 103.198460 2018-07-20 15:00:00 6.321222 -3.078589e-16 -2.444517e-05 6.318381 1.480618 15.43666 0.008717666 0.0005955538 1.0829833 ⋯ -1.737773e-07 0.101715975 NA 84.83316 0.54901559 0 0 NA 119.072260 81.415559 2018-07-20 15:30:00 6.043490 -3.591949e-16 -2.272359e-05 6.041072 1.537172 15.27256 0.008609773 0.0005955597 1.0474320 ⋯ -1.625061e-07 0.092767213 NA 88.07349 0.63644762 0 0 NA 108.596528 81.701058 2018-07-20 16:00:00 5.939518 -1.692595e-16 -1.849441e-05 5.937431 1.496256 15.13815 0.008618070 0.0005955722 0.9961572 ⋯ -1.694039e-07 0.084952398 NA 85.72916 0.60281578 0 0 NA 99.448234 82.174082 2018-07-20 16:30:00 5.306554 2.974929e-16 -3.094122e-05 5.303926 1.505930 14.99383 0.008512352 0.0005958945 0.9426203 ⋯ -1.604182e-07 0.071198878 NA 86.28345 0.89501195 0 0 NA 83.347884 76.171833 2018-07-20 17:00:00 5.520015 4.660902e-17 -1.371344e-05 5.518476 1.527105 14.66441 0.008393601 0.0005971210 0.9157507 ⋯ -1.052333e-07 0.043069756 NA 87.49668 0.68897202 0 0 NA 50.418955 47.779392 2018-07-20 17:30:00 5.772783 5.944122e-16 -2.376498e-05 5.770532 1.526367 14.23050 0.008291716 0.0005985217 1.0008122 ⋯ -9.532674e-08 0.034922874 NA 87.45438 0.82061559 0 0 NA 40.881932 48.261033 2018-07-20 18:00:00 5.858808 4.427743e-16 -2.452174e-05 5.855744 1.474368 13.76722 0.008188837 0.0006000559 0.9311757 ⋯ -6.832866e-08 0.021616959 NA 84.47508 0.49358496 0 0 NA 25.305564 36.169862 2018-07-20 18:30:00 4.726868 -3.629108e-16 -2.609463e-05 4.724053 1.443867 13.42414 0.008213861 0.0006007363 0.8119707 ⋯ -4.526051e-08 0.006660012 NA 82.72747 0.58131225 1 0 NA 7.796442 28.714652 2018-07-20 19:00:00 5.235747 -4.403414e-16 -2.374174e-05 5.232331 1.446531 12.95281 0.008061974 0.0006026033 0.8973074 ⋯ -9.836328e-09 -0.003044785 NA 82.88014 0.41484529 1 0 NA -3.564331 21.349899 2018-07-20 19:30:00 4.888416 -5.150101e-16 -1.013674e-05 4.887055 1.424478 12.26218 0.007800124 0.0006059566 0.8556428 ⋯ 2.634083e-08 -0.010446773 NA 81.61656 0.49182960 0 0 NA -12.229356 16.702988 2018-07-20 20:00:00 4.186600 2.900506e-16 -1.165991e-05 4.184779 1.268382 11.69501 0.007702318 0.0006083613 0.8672731 ⋯ 6.448021e-08 -0.025728114 NA 72.67291 0.38725083 0 0 NA -30.118225 12.138708 2018-07-20 20:30:00 3.551020 -2.893889e-16 -1.814533e-06 3.555726 1.195096 11.06218 0.007535550 0.0006109579 1.0888968 ⋯ 6.581506e-08 -0.020063040 NA 68.47397 -0.02209129 0 0 NA -23.486493 8.825126 2018-07-20 21:00:00 3.181178 2.700118e-16 8.888365e-09 3.181144 1.108919 10.56345 0.007438288 0.0006128597 0.7279405 ⋯ 6.871569e-08 -0.021064154 NA 63.53635 -0.25485232 0 0 NA -24.658431 5.239288 2018-07-20 21:30:00 3.433915 -3.167000e-16 6.880287e-06 3.431664 1.203063 10.68381 0.007496276 0.0006119426 0.7405834 ⋯ 7.468146e-08 -0.023601111 NA 68.93044 -0.17637338 0 0 NA -27.628282 8.886297 2018-07-20 22:00:00 3.274341 -2.888448e-16 1.778441e-05 3.275246 1.495703 10.65175 0.007511255 0.0006121003 0.8838687 ⋯ 7.784352e-08 -0.021391491 NA 85.69748 0.82076630 0 0 NA -25.041624 7.859899 2018-07-20 22:30:00 2.803897 -2.616895e-16 1.775305e-05 2.807623 1.344351 10.09577 0.007429886 0.0006149156 0.6440969 ⋯ 4.863595e-08 -0.011427853 NA 77.02565 0.27070980 1 0 NA -13.377842 3.197872 2018-07-20 23:00:00 2.254428 1.066464e-16 7.137489e-05 2.260404 1.541577 10.09860 0.007342520 0.0006150409 0.3268925 ⋯ 4.166614e-08 -0.008875441 NA 88.32585 0.66714732 0 0 NA -10.389901 1.608121 ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋱ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ ⋮ 2018-07-22 09:00:00 4.934240 1.360241e-16 -3.029725e-05 4.931280 1.5564115 11.60676 0.008045377 0.0006071581 0.9836290 ⋯ -2.728952e-07 0.1469336287 NA 89.17581 0.65919637 0 0 NA 172.0056191 91.155380 2018-07-22 09:30:00 3.685099 1.311143e-16 -1.743743e-05 3.680715 1.5207279 11.88088 0.007695658 0.0006065192 0.9424085 ⋯ -2.423139e-07 0.1276529904 NA 87.13129 0.22942499 0 0 NA 149.4350329 87.776234 2018-07-22 10:00:00 3.808851 3.501510e-16 -2.815809e-06 3.805463 1.2501465 12.55179 0.007658358 0.0006039184 0.9662970 ⋯ -3.035400e-07 0.1568491952 NA 71.62812 0.04763640 0 0 NA 183.6131263 125.672679 2018-07-22 10:30:00 4.038900 3.412161e-17 -2.187558e-05 4.035977 1.5611167 12.68939 0.007443700 0.0006037819 0.9762103 ⋯ -2.515459e-07 0.1402379720 NA 89.44540 0.44763283 0 0 NA 164.1674503 135.529031 2018-07-22 11:00:00 4.041805 2.169395e-17 -1.737959e-06 4.040701 1.4370347 13.21034 0.007536608 0.0006022697 1.0340207 ⋯ -2.199780e-07 0.1324872047 NA 82.33603 0.09057700 0 0 NA 155.0941324 110.693473 2018-07-22 11:30:00 3.973222 3.013937e-04 -1.008345e-05 3.972104 1.5463529 13.84238 0.007486059 0.0006004164 1.0594391 ⋯ -1.940930e-07 0.1478984398 NA 88.59950 0.69111276 0 0 NA 173.1350605 112.520105 2018-07-22 12:00:00 4.283310 -4.358781e-16 -2.031664e-05 4.281145 1.4904558 14.38656 0.007452259 0.0005988270 1.0369835 ⋯ -2.192808e-07 0.1572654103 NA 85.39683 0.60405517 0 0 NA 184.1003622 144.963821 2018-07-22 12:30:00 3.406857 -4.631435e-18 -2.148455e-05 3.404504 1.6768265 14.31459 0.007368565 0.0005994846 0.9934416 ⋯ -2.036819e-07 0.1356744868 NA 96.07508 0.56222577 0 0 NA 158.8252757 130.511414 2018-07-22 13:00:00 3.510585 2.240778e-16 6.470652e-07 3.508803 1.5042434 14.38106 0.007626521 0.0005990254 1.0042979 ⋯ -2.374995e-07 0.1261090650 NA 86.18680 -0.02081545 1 0 NA 147.6276601 137.495659 2018-07-22 13:30:00 3.968790 8.016486e-17 9.967825e-07 3.967463 1.3624830 14.14629 0.007626520 0.0005989277 0.8834556 ⋯ -1.783447e-07 0.0504325709 NA 78.06452 -0.04307320 0 0 NA 59.0381225 55.629582 2018-07-22 14:00:00 4.956423 2.401986e-17 -1.127752e-05 4.954213 1.3523014 13.89753 0.007715921 0.0005984573 1.0858658 ⋯ -1.849130e-07 0.0659642731 NA 77.48116 0.30163387 0 0 NA 77.2200736 37.169667 2018-07-22 14:30:00 4.536245 3.509249e-16 -1.557156e-05 4.534354 1.4097145 13.57508 0.008061454 0.0005981953 0.9470086 ⋯ -1.976818e-07 0.0596950154 NA 80.77069 0.52446421 0 0 NA 69.8810624 59.113466 2018-07-22 15:00:00 3.323492 1.824209e-16 6.268496e-05 3.319558 1.0041217 13.73304 0.008020425 0.0005967901 0.9860027 ⋯ -2.856360e-07 0.0874115300 NA 57.53193 -1.07062469 0 0 NA 102.3269789 90.497803 2018-07-22 15:30:00 3.426673 9.128458e-18 9.364812e-05 3.421413 0.8924684 13.68513 0.008118645 0.0005968709 1.0725842 ⋯ -2.663410e-07 0.0726323087 NA 51.13467 -1.18453904 0 0 NA 85.0259082 75.815574 2018-07-22 16:00:00 5.038157 6.334020e-17 2.764715e-05 5.033950 1.0795385 13.27879 0.008213574 0.0005985829 1.2008591 ⋯ -1.940414e-07 0.0617238594 NA 61.85300 -0.38713026 0 0 NA 72.2560979 54.747261 2018-07-22 16:30:00 4.645413 -1.371246e-16 1.770146e-05 4.643136 1.1494962 12.92932 0.008076257 0.0005997796 1.0632421 ⋯ -1.491321e-07 0.0425055503 NA 65.86128 -0.47973064 0 0 NA 49.7584764 43.169816 2018-07-22 17:00:00 5.001013 -5.808562e-16 -7.392887e-07 5.000230 1.3124190 12.57927 0.008170141 0.0006010954 1.2517845 ⋯ -1.395839e-07 0.0440654985 NA 75.19607 0.05424580 0 0 NA 51.5846060 51.117089 2018-07-22 17:30:00 4.633404 5.241664e-16 -1.060797e-05 4.630818 1.3701906 12.17168 0.008480251 0.0006024389 0.8424576 ⋯ -8.066659e-08 0.0401371726 NA 78.50614 0.23876210 0 0 NA 46.9859710 22.568161 2018-07-22 18:00:00 4.808849 2.476932e-16 -1.946078e-06 4.808397 1.4466351 11.63522 0.008832184 0.0006047761 1.0330590 ⋯ -2.724699e-08 0.0334611799 NA 82.88609 0.60550086 0 0 NA 39.1708216 20.361893 2018-07-22 18:30:00 4.991756 1.900191e-16 -9.402087e-06 4.989375 1.3828198 11.58462 0.008966201 0.0006071991 0.9245638 ⋯ 4.845547e-08 0.0200961999 NA 79.22974 0.23016275 0 0 NA 23.5253109 15.557606 2018-07-22 19:00:00 4.629573 -1.132581e-16 -1.405561e-06 4.627018 1.3171244 11.39210 0.009011218 0.0006088185 0.8886549 ⋯ 4.470996e-08 0.0067135792 NA 75.46567 0.03152531 1 0 NA 7.8591494 8.669188 2018-07-22 19:30:00 4.336875 -5.562471e-17 3.616091e-07 4.337095 1.2881384 11.43086 0.009037957 0.0006091240 1.1164046 ⋯ 7.632590e-08 0.0109052802 NA 73.80490 0.09186474 0 0 NA 12.7661005 12.068417 2018-07-22 20:00:00 4.289542 1.404781e-17 8.410191e-06 4.289915 1.4539472 11.14092 0.009144167 0.0006096889 0.9880762 ⋯ 8.200592e-08 0.0103035127 NA 83.30504 0.69723069 1 0 NA 12.0616505 12.182950 2018-07-22 20:30:00 4.081792 -2.269024e-16 -6.796915e-06 4.080873 1.3794733 11.16442 0.009021582 0.0006100198 0.8368831 ⋯ 7.528827e-08 0.0015929239 NA 79.03800 0.51751216 2 0 NA 1.8647321 6.685670 2018-07-22 21:00:00 3.133527 4.899518e-17 -1.415750e-05 3.130986 1.3399591 11.06795 0.009055533 0.0006108238 0.6423834 ⋯ 9.266462e-08 0.0022900645 NA 76.77400 0.32570547 1 0 NA 2.6808292 6.693488 2018-07-22 21:30:00 3.295366 -2.060070e-16 -1.353138e-07 3.295063 1.4847268 11.06516 0.009071125 0.0006110649 0.6248660 ⋯ 7.630650e-08 0.0021026626 NA 85.06858 0.76335410 1 0 NA 2.4614500 8.332597 2018-07-22 22:00:00 3.810747 4.310967e-16 3.270931e-06 3.808663 1.3221299 11.15502 0.008972078 0.0006097459 0.8179345 ⋯ 6.964864e-08 0.0002744484 NA 75.75246 -0.09013074 2 0 NA 0.3212788 7.582162 2018-07-22 22:30:00 4.409078 1.620700e-16 -7.665109e-06 4.406794 1.3323178 11.15232 0.008923315 0.0006097643 0.8335655 ⋯ 8.022387e-08 0.0025132864 NA 76.33619 0.19445437 1 0 NA 2.9421405 6.405388 2018-07-22 23:00:00 3.873026 2.977127e-16 -1.294909e-05 3.871143 1.3683514 10.78057 0.008990173 0.0006105977 0.8732912 ⋯ 7.507837e-08 0.0029890703 NA 78.40076 0.41666893 1 0 NA 3.4991097 6.641999 2018-07-22 23:30:00 4.861514 -2.500325e-16 4.084664e-06 4.861716 1.4144546 10.67567 0.008985399 0.0006120489 0.9869727 ⋯ 8.122176e-08 0.0078762013 NA 81.04228 0.54988229 0 0 NA 9.2201553 4.659475 saveRDS(dat,file=&quot;../data/ec-data_30min_processed/processed_data_example.rds&quot;) Note, different sensors may require different correction methods, see also Foken, 2017. Additionally, the angles in the rotation can also be checked to verify if the applied rotation method is suitable (for longer time periods planar fit would be an alternative, e.g., if there is a systematic topographically induced vertical wind speed, and for stable stratification it should be checked whether the angles stay somehow constant and do not flip due to sign changes of the close-to-zero fluxes). 2.0.2 Literature Foken, T. (2017). Micrometeorology, Springer-Verlag Berlin Heidelberg, DOI: 10.1007/978-3-642-25440-6. "],["calculation-of-some-basic-turbulence-quantities.html", "3 Calculation of some basic turbulence quantities 3.1 Calculation of standard turbulence diagnostics and simple timeseries plots 3.2 Regime plots 3.3 Stability dependence with discrete binning (binning) 3.4 Literature", " 3 Calculation of some basic turbulence quantities Based on the half-hourly output of the first notebook (01_post-processing.ipynb) some standard turbulence quantities, i.e. stability parameter, friction velocity, TKE, turbulence intensity are calculated and plotted. #loading Reddy package install.packages(&quot;../src/Reddy_0.0.0.9000.tar.gz&quot;,repos=NULL,source=TRUE) library(Reddy) library(latex2exp) kap=function() return(0.4) Installing package into ‘/home/lauracma/R/x86_64-pc-linux-gnu-library/4.0’ (as ‘lib’ is unspecified) #read in processed example data dat=readRDS(&quot;../data/ec-data_30min_processed/processed_data_example.rds&quot;) 3.1 Calculation of standard turbulence diagnostics and simple timeseries plots Here, some functions from the Reddy package are used to calculate turbulent kinetic energy \\(TKE\\), velocity scale of TKE \\(V_{TKE}\\), horizontal turbulence intensity \\(TI\\), vertical turbulence intensity \\(I_w\\), friction velocity \\(u_*\\), Obukhov length \\(L\\), stability parameter \\(\\zeta\\) and directional shear angle and plot their timeseries for the previously post-processed example data. #calculation of some useful turbulence diagnostics dat$tke=calc_tke(dat$u_sd,dat$v_sd,dat$w_sd) dat$vtke=calc_vtke(dat$u_sd,dat$v_sd,dat$w_sd) dat$ti=calc_ti(dat$u_sd,dat$v_sd,dat$ws_mean) dat$iw=calc_iw(dat$w_sd,dat$ws_mean) dat$ustar=calc_ustar(dat$cov_uw,dat$cov_vw) dat$L=calc_L(dat$ustar,dat$T_mean,dat$cov_wT) dat$zeta=calc_zeta(4.4,dat$L) dat$alpha_uw=calc_dshear(dat$cov_uw,dat$cov_vw) #basic timeseries plots plot(dat$T_mean,type=&quot;l&quot;,ylab=&quot;temperature [°C]&quot;,col=2) plot(dat$ws_mean,type=&quot;l&quot;,ylab=&quot;wind speed [m/s]&quot;) plot(dat$tke,type=&quot;l&quot;,ylab=TeX(&quot;TKE [$m^2/s^2$]&quot;),ylim=c(0,2)) plot(dat$zeta,type=&quot;l&quot;,ylab=&quot;stability parameter [-]&quot;) abline(h=0,lty=2) plot(dat$ti,type=&quot;l&quot;,ylab=&quot;turbulence intensity [-]&quot;,ylim=c(0,1)) points(dat$iw,type=&quot;l&quot;,col=&quot;gray50&quot;) plot(dat$cov_uw,type=&quot;l&quot;,ylab=TeX(&quot;cov(u,w) [$m^2/s^2$]&quot;)) plot(dat$cov_wT,type=&quot;l&quot;,ylab=TeX(&quot;cov(T,w) [$K m/s$]&quot;)) plot(dat$cov_h2ow,type=&quot;l&quot;,ylab=TeX(&quot;cov(q,w) [$mmol m/s$]&quot;)) plot(dat$cov_co2w,type=&quot;l&quot;,ylab=TeX(&quot;cov(c,w) [$ppm m/s$]&quot;)) png png png png png png png png png 3.2 Regime plots To diagnose different turbulence regimes, scatter plots of different turbulence diagnostics can be used. Here are some examples plotting wind speed vs TKE or stability parameter vs TKE (see e.g., Sun et al., 2012). #some basic plots plot(dat$ws_mean,dat$tke,ylim=c(0,3),xlab=&quot;wind speed [m/s]&quot;,ylab=TeX(&quot;TKE [$m^2/s^2$]&quot;)) cond=(dat$ws_mean&gt;2) fit=lm(dat$tke[cond]~dat$ws_mean[cond]) abline(fit,col=2,lty=2) plot(dat$zeta,dat$tke,ylim=c(0,3),xlab=&quot;stability parameter [m/s]&quot;,ylab=TeX(&quot;TKE [$m^2/s^2$]&quot;)) png png 3.3 Stability dependence with discrete binning (binning) Often it is interesting to investigate the stability dependence of turbulence characteristics. For this the function binning can be used, which bins one variable based on another for predefined bins, as exemplified below for the dependence of the sensible heat flux on the stability parameter. The output contains mean, median, 25% and 75% quartile per discrete bin as dataframe. The used variables and the bins can be customized. Such type of analysis is usually applied to longer timeseries. zeta_bins=c(-10^(2:-2),10^(-2:2)) sh_binned=binning(dat$sh,dat$zeta,zeta_bins) sh_binned #look at output xbins=c(-5^(2:-1),0,5^(-1:2)) plot(xbins,sh_binned[,2],type=&quot;b&quot;,ylim=c(-20,150),lwd=2,col=2,xlab=&quot;stability parameter [-]&quot;,ylab=TeX(&quot;SH [W/m$^2$]&quot;)) points(xbins,sh_binned[,3],type=&quot;l&quot;,lty=2,col=2) points(xbins,sh_binned[,4],type=&quot;l&quot;,lty=2,col=2) abline(h=0,lty=2) abline(v=0,lty=2) A matrix: 9 × 4 of type dbl 122.045246 116.804837 109.052920 129.797163 120.620398 125.471467 75.448402 167.986972 17.306097 12.061651 5.647776 24.415438 1.823135 1.864732 1.093005 2.574063 NA NA NA NA -3.564331 -3.564331 -3.564331 -3.564331 -11.192381 -12.213284 -13.937180 -8.561890 -18.102981 -19.201199 -22.358905 -14.674265 -8.655841 -10.389901 -11.853905 -6.324807 png 3.4 Literature Sun, J., Mahrt, L., Banta, R. M., and Pichugina, Y. L. (2012). Turbulence Regimes and Turbulence Intermittency in the Stable Boundary Layer during CASES-99. J Atmos Sci, 69:338–351. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
